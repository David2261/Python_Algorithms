Возможности стандартной библиотеки

базовая работа со строками и символами;
сортировка и компараторы (функции сравнения объектов);
списки (на массиве и связные);
множества и словари (хеш-таблицы и деревья поиска);
стек и очередь;
очередь с приоритетом (обычно на основе кучи);
встроенный двоичный поиск;
Базовые алгоритмы

двоичный поиск (когда не хватает встроенного);
префиксные суммы;
два указателя;
сортировка событий;
двоичные деревья (не поиска, просто деревья);
Базовые алгоритмы, но для искушенных

динамическое программирование
одномерное (зайчик);
двумерное (черепашка);
рюкзак;
основы теории графов:
хранение;
поиск в глубину;
поиск в ширину;
топологическая сортировка;
кратчайшие пути.

Рекомендуется рассмотреть возможность вывода данных с помощью комбинации:

сбор всех результирующих данных в один массив
приведение элементов данного массива к строкам:
“скрепление” данных строк с помощью функции “join” у выбранного разделителя
Пример: вывод массива целых чисел “ans” в формате “каждое число на новой строке”:

# если ans = [1, 3, 5], то map(str, ans) сделает "1", "3", "5"
ans_str = "\n".join(map(str, ans))
print(ans_str)
Работа с кодами символов

ord(ch) - ord(‘a’) или ord(ch) - ord(‘A’) - номер символа ch в алфавите (зависит от регистра);
chr(pos + ord(‘a’)) или chr(pos + ord(‘A’)) - символ по номеру pos в алфавите (зависит от регистра);
Возможности стандартной библиотеки языка

Очевидно, что это не все возможности, просто элементы из пункта 3.0.3.

sort / sorted;
list (динамический массив);
set / dict - хеш-таблицы;
модуль bisect;
модуль collections: deque, defaultdict;
модуль heapq.